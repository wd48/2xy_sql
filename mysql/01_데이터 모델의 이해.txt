https://m.blog.naver.com/loleego/221612883092?referrerCode=1
1. 모델링의 이해
1) 모델링
- 모델 : 모형, 축소형
:: 사람이 살아가면서 나타날 수 있는 다양한 현상에 대해 일정한 표기법으로 표현해 놓은 모형
    [1] Webster 사전 : 가설적 또는 일정 양식에 맞춘 표현
    [2] 현실세계를 단순화시켜 표현한 것
    [3] 명확하게 하는 것
    [4] 현실 세계의 추상화된 반영

2) 모델링의 특징
    [1] 추상화 : 다양한 현상을 일정한 양식인 표기법에 의해 표현
    [2] 단순화 : 약속된 규약에 의해 제한된 표기법. 언어로 표현하여 쉽게 이해할 수 있도록 하는 개념
    [3] 명확화 : 정확하게 현상을 기술하는 것

- 즉 모델링 = 현실세계를 추상화, 단순화, 명확화하기 위해 일정한 표기법에 의해 표현하는 기법임

3) 모델링의 세 가지 관점
    [1] 데이터관점 : 업무가 어떤 데이터와 관련이 있는지 모델링하는 방법(What, Data)
    [2] 프로세스 관점 : 업무가 실제하고 있는 일이 무엇인지 모델링하는 방법(How, Process)
    [3] 데이터와 프로세스의 상관관점 : 업무가 처리하는 일의 방법에 따라 데이터가 받는 영향을 모델링 (Interaction)

================================================================================================
2. 데이터 모델의 기본 개념 이해
1) 데이터 모델링의 정의
    - 데이터 모델 : 데이터베이스의 골격을 이해하고, SQL 문장을 효율적으로 작성하기 위한 핵심 요소
    - 데이터 모델을 하는 목적
        [1] 정보를 일정한 표기법에 의해 표현하여 업무 내용을 정확하게 분석
        [2] 실제 데이터베이스를 생성하여 개발 및 데이터 관리에 사용
    - 데이터 모델링 요약
        [1] 정보 시스템을 구축하기 위한 데이터 관점의 업무 분석 기법
        [2] 현실 세계의 데이터(What)에 대해 약속된 표기법에 의해 표현하는 과정
        [3] 데이터베이스를 구축하기 위한 분석/설계의 과정

2) 데이터 모델이 제공하는 기능
    [1] 시스템을 가시화
    [2] 시스템의 구조와 행동을 명세화
    [3] 시스템을 구축하는 구조화된 틀 제공
    [4] 시스템을 구축하는 과정에서 결정한 것을 문서화
    [5] 다양한 관점 제공(다른 영역의 세부 사항 숨김 등)
    [6] 구체화된 상세 수준의 표현방법 제공

================================================================================================
3. 데이터 모델링의 중요성 및 유의점
1) 파급효과(Leverage)
    - 시스템 구축 도중 데이터 모델의 변경이 불가피한 상황이 발생할 경우, 변경해야 하는 데이터 모델의 형태에 따라
    시스템 구축 프로젝트에서 큰 위험 요소가 될 수 있음.
    따라서 데이터 설계가 다른 어떤 설계 과정보다 중요

2) 복잡한 정보 요구사항의 간결한 표현(Conciseness)
    - 데이터 모델은 구축할 시스템의 정보 요구사항과 한계를 가장 명확하고 간결하게 표현할 수 있는 도구
    - 데이터 모델은 다른 사람이 설계자의 생각대로 정보 요구 사항을 이해하고 개발하여 데이터 정합성을 유지하도록 하는 것

3) 데이터 품질(Data Quality)
    - 회사는 오랜기간 축적된 데이터를 전략적으로 활용할 수 있어야 함
    이 때, 데이터 구조가 잘못돼 있다면 데이터 품질에 문제점이 발생할 수 있음
    - 데이터 모델링을 할 때 유의점
    [1] 중복(Duplication)
        - 데이터베이스가 여러 장소에 같은 정보를 저장하지 않도록 유의
    [2] 비유연성(Inflexibility)
        - 데이터의 정의를 데이터의 사용 프로세스와 분리하여
        데이터와 프로세스의 작은 변화가 애플리케이션과 DB에 중대한 변화를 일으킬 가능성을 줄여야 함
    [3] 비일관성(Inconsistency)
        - 데이터 모델링을 할 때, 데이터와 데이터 간 상호 연관 관계에 대한 명확한 정의가 필요함
        이를 어길 경우 연관된 정보에 대한 갱신 없이 타 정보를 갱신할 수 있음

================================================================================================
4. 데이터 모델링의 3단계 진행
1) 개념적 데이터 모델링 (Conceptual Data Modeling)
    - 추상화 수준이 높고 업무중심적이고 포괄적인 수준의 모델링 진행
    - 전사적 데이터 모델링, EA 수립 시 많이 이용
    - 엔티티-관계 다이어그램 (ER Diagram) 생성
    - 데이터 요구를 공식화하는 것의 기능
    [1] 사용자와 시스템 개발자가 데이터 요구 사항을 발견하는 것을 지원,
        추상적이기 때문에 주소화를 쉽게 함
    [2] 현 시스템이 어떻게 변형되어야 하는가를 이해하는데 유용

2) 논리적 데이터 모델링 (Logical Data Modeling)
    - 시스템으로 구축하고자 하는 업무에 대해 key, 속성, 관계 등을 정확히 표현
    재사용성이 높음
    - 물리적인 스키마 설계를 하기 전 단계의 '데이터 모델' 상태를 일컫는 말
    (DB를 알아보기 쉽게 한국어로 정의한 것이라고 보면 됨)
    - 정규화 필요 : 논리 데이터 모델의 일관성을 확보, 중복을 제거하여 신뢰성 있는 구조를 얻는 목적
    - 논리 데이터 모델의 상세화 : 식별자 확정, 정규화, N:M 관계 해소, 참조 무결성 규칙 정의

3) 물리적 데이터 모델링 (Physical Data Modeling)
    - 논리 데이터 모델이 컴퓨터 하드웨어에 어떻게 표현될 것인가? => 물리적 데이터 모델링

================================================================================================
5. 프로젝트 생명주기 [분석 - 설계 - 개발 - 테스트 - 전환/이행]

데이터
[논리/개념 데이터 모델링 - 물리데이터 모델링 - DB 구축, 변경, 관리 - DB 튜닝 - DB 전환]

프로세스
[프로세스 모델링 - AP 설계 - AP 개발 - AP 테스트 - AP 설치]

================================================================================================
6. 데이터 모델링에서 데이터 독립성의 이해
1) 데이터 독립성의 필요성
    - 기능화된 구성의 목적
    : 컴포넌트 기반의 모듈 구성이 각각의 고유한 기능을 가지면서, 다른 기능을 가진 컴포넌트와 인터페이스를 가지게 하는 모습
    - 데이터 독립성의 목적
        [1] 자신의 가지는 고유한 특정을 명확하게 함
        [2] 다른 기능의 변경으로부터 쉽게 변형되지 않고 자신의 고유한 기능을 제공
        [3] 유지 보수 비용 절감
        [4] 데이터 복잡도를 낮추며 중복된 데이터를 줄여줌
    - 데이터 독립성 확보 후의 효과
        [1] 계층별 View에 영향을 주지 않고 변경 가능
        [2] 단계별 스키마에 따라 데이터 정의어와 데이터 조작어가 다름을 제공

2) 데이터베이스 3단계 구조
    [1] 외부적 단계
        : 사용자 개개인이 보는 자료에 대한 관점
        : 사용자가 처리하고자 하는 유형에 따라 다른 스키마 구조를 가지고 있음
    [2] 개념적 단계
        : 사용자가 처리하는 데이터 유형의 공통 사항을 처리하는 통합된 뷰를 스키마 구조로 디자인한 것
    [3] 내부적 단계
        : 데이터가 물리적으로 저장된 방법에 대한 스키마 구조

3) 데이터 독립성의 요소
    [1] 외부 스키마(External Schema)
        - View 단계. 여러 개의 사용자 관점으로 구성, 서로 다른 사용자가 보는 개인적 DB 스키마
        - DB의 서로 다른 사용자가 응용 프로그래머가 접근하는 DB 정의
        - 사용자 관점에서 접근하는 특성에 따른 스키마 구성
    [2] 개념 스키마(Conceptual Schema)
        - 개념 단계. 하나의 개념적 스키마로 구성, 모든 사용자 관점을 통솔한 DB를 기술하는 것
        - DB에 저장되는 데이터와 그들간의 관계를 표현하는 스키마
    [3] 내부 스키마(Internal Schema)
        - 내부 단계. 내부 스키마로 구성, DB가 물리적으로 저장된 형식
        - 물리적 장치에서 데이터가 실제적으로 저장되는 방법을 표현하는 스키마
        - 물리적 저장 구조

4) 두 영역의 데이터 독립성
    [1] 논리적 독립성
        - 개념 스키마가 변형되어도 외부 스키마에는 영향을 미치지 않도록 지원
        - 논리적 구조가 변경되어도 응용 프로그램에 영향 없음
        - 특징 : 사용자 특성에 맞는 변경 가능, 통합 구조 변경 가능
    [2] 물리적 독립성
        - 내부 스키마가 변경되어도 외부/개념 스키마에는 영향을 미치지 않도록 지원
        - 저장 장치의 구조 변경이 응용프로그램과 개념 스키마에 영향 없음
        - 특징 : 물리적 구조 영향없이 개념 구조 변경가능, 개념 구조 영향없이 물리구조 변경 가능

5) 사상 (Mapping)
- 정의 : 상호 독립적인 개념을 연결시켜주는 다리
- 데이터 독립성의 사상
    [1] 외부적/개념적 사상 (논리적 사상)
        - 외부적 뷰와 개념적 뷰의 상호 관련성을 정의
        - 사용자가 접근하는 형식에 따라 다른 타입의 필드를 가질 수 있음.
          개념적 뷰의 필드 타입은 변화 없음
    [2] 개념적/내부적 사상 (물리적 사상)
        - 개념적 뷰와 저장된 데이터베이스의 상호 관련성을 정의
        - 저장된 데이터베이스 구조가 바뀐다면 물리적 사상이 바뀌어야 함. 그래야 개념적 스키마가 남아있음

================================================================================================
7. 데이터 모델링의 중요한 세 가지 개념
1) 세 가지 요소
    [1] 업무가 관여하는 어떤 것 (Things)
        - 사물이나 사건 등을 바라볼 때, 전체를 지칭하는 용어
    [2] 어떤 것이 가지는 성격 (Attributes)
        - Things 가 가지는 세부적인 사항
    [3] 업무가 관여하는 어떤 것 간의 관계 (Relationships)
        - 다른 Things 와의 연관성을 가짐

2) 단수와 집합(복수)의 명명 [개념 - 복수/집합개념 (타입/클래스) - 개별/단수개념 (어커런스/인스턴스)]
    [어떤 것(Things) - 엔터티 타입:Entity Type (엔터티: Entity) - 엔터티:Entity (인스턴스:Instance / 어커런스:Occurrence)]
    [어떤 것의 성격(Characteristic of a Thing) - 속성:Attribute 값 - 속성값:Attribute Value]
    [어떤 것 같의 연관(Association between Things) - 관계:Relationship - 페어링:Pairing]

================================================================================================
8. 데이터 모델링의 이해관계자
1) 이해관계자의 데이터 모델링 중요성 인식
    - 대부분의 실무에서 DBA가 데이터 모델링을 전적으로 하지 않음.
    - 개발자가 데이터 모델링을 같이 하게 됨
2) 데이터 모델링의 이해관계자
    [1] 정보시스템을 구축하는 모든 사람 (코더 포함)
    [2] 해당 업무에서 정보화를 추진하는 위치에 있는 사람

================================================================================================
9. 데이터 모델의 표기법인 ERD의 이해 > 링크확인

================================================================================================
10. 좋은 데이터 모델의 요소
1) 완전성 (Completeness)
    - 업무에서 필요로하는 모든 데이터가 데이터 모델에 정의되어 있어야함

2) 중복배제 (Non-Redundancy)
    - 하나의 데이터베이스 내에 동일한 사실은 반드시 한 번만 기록해야 함

3) 업무규칙 (Business Rules)
    - 데이터 모델의 중요 요소
    : 데이터 모델링 과정에서 만들어진 업무 규칙을 데이터 모델에 표현하고 모든 이용자가 공유할 수 있도록 제공

4) 데이터 재사용 (Data reusability)
    - 데이터가 애플리케이션에 대해 독립적으로 설계되어야만 데이터 재사용성을 향상시킬 수 있음
    - 데이터 구조의 확장성, 유연성에 많은 노력을 기울이고 있음

5) 의사소통 (Communication)
    - 많은 업무 규칙들을 업무 관련자들이 설계자가 정의한 업무 규칙을 동일한 의미로 받아들이고 정보시스템을 활용할 수 있게 함

6) 통합성 (Integration)
    - 동일한 데이터는 조직의 전체에서 한 번만 정의되고 이를 다른 영역에서 참조, 활용
    - 성능 등의 부가적인 목적으로 의도적으로 데이터를 중복시키는 경우도 있음